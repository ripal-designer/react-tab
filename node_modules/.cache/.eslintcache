[{"C:\\Users\\Akash Patel\\OneDrive\\Documents\\GitHub\\react-tab\\src\\index.js":"1","C:\\Users\\Akash Patel\\OneDrive\\Documents\\GitHub\\react-tab\\src\\App.js":"2","C:\\Users\\Akash Patel\\OneDrive\\Documents\\GitHub\\react-tab\\src\\component\\Tab.js":"3","C:\\Users\\Akash Patel\\OneDrive\\Documents\\GitHub\\react-tab\\src\\component\\FontA.js":"4","C:\\Users\\Akash Patel\\OneDrive\\Documents\\GitHub\\react-tab\\src\\component\\FontB.js":"5"},{"size":211,"mtime":1647461425557,"results":"6","hashOfConfig":"7"},{"size":1053,"mtime":1647461425510,"results":"8","hashOfConfig":"7"},{"size":1223,"mtime":1647461425554,"results":"9","hashOfConfig":"7"},{"size":1649,"mtime":1647461425545,"results":"10","hashOfConfig":"7"},{"size":978,"mtime":1647461425553,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ctl2nf",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\Akash Patel\\OneDrive\\Documents\\GitHub\\react-tab\\src\\index.js",[],[],"C:\\Users\\Akash Patel\\OneDrive\\Documents\\GitHub\\react-tab\\src\\App.js",[],[],"C:\\Users\\Akash Patel\\OneDrive\\Documents\\GitHub\\react-tab\\src\\component\\Tab.js",["29","30"],[],"import { useState} from \"react\";\r\nimport FontA from \"./FontA\";\r\nimport FontB from \"./FontB\";\r\n\r\n\r\nexport default function Tab(props) {\r\n    const [storedId , setStoredId] = useState(101);\r\n    const [fontEnd, setFontEnd] = useState(\"fonts_a\");\r\n    const [remeber, rememberMe] = useState();\r\n\r\n\r\n    function handlerCache() {\r\n      \r\n  localStorage.setItem('rememberMe', rememberMe);\r\n  localStorage.setItem('setFontEnd', rememberMe ? setFontEnd : '');\r\n  console.log(setFontEnd)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n          <h2 className=\"title\">Please select one font</h2>\r\n<ul className=\"nav justify-content-end\">\r\n      { props.tabsArr.map((tab) => {\r\n        return(\r\n          <li className=\"nav-item\" key={tab.id}>\r\n          <a  tabIndex=\"0\"\r\n          // key={tab.id} \r\n          className={\"nav-link \" + (tab.id === storedId ? 'active' : '')}\r\n          aria-current=\"page\" \r\n          onClick={() => {setStoredId(tab.id); setFontEnd(tab.content_endpoint); handlerCache()}}>\r\n            {tab.label}</a>\r\n          </li>\r\n        );\r\n        })\r\n      }\r\n          </ul>\r\n          {fontEnd === \"fonts_a\" ? <FontA fontEnd={fontEnd} fontAArr={props.fontAArr} /> : <FontB />}\r\n          </div>\r\n    )\r\n        }","C:\\Users\\Akash Patel\\OneDrive\\Documents\\GitHub\\react-tab\\src\\component\\FontA.js",[],[],"C:\\Users\\Akash Patel\\OneDrive\\Documents\\GitHub\\react-tab\\src\\component\\FontB.js",["31"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nfunction BuyFont() {\r\n    \r\n  const [data, setData] = useState();\r\n\r\n  const fetchData = () => {\r\n    fetch(\"http://json.ffwagency.md/fonts_b\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        let filterData = JSON.stringify(result);\r\n\r\n        const myObj = JSON.parse(filterData);\r\n        //   const x = myObj[\"type\"];\r\n\r\n        const data = result;\r\n        document.getElementById(\"type\").innerHTML = myObj.type;\r\n        document.getElementById(\"content\").innerHTML = myObj.content;\r\n\r\n        setData(data);\r\n        console.log(data);\r\n        console.log(myObj.content);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tab-content col-md-8 justify-content-center d-flex flex-column  align-items-center\">\r\n      <h2 id=\"type\"> </h2>\r\n      <div id=\"content\" className=\"text-center\"> </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BuyFont;\r\n",{"ruleId":"32","severity":1,"message":"33","line":9,"column":12,"nodeType":"34","messageId":"35","endLine":9,"endColumn":19},{"ruleId":"36","severity":1,"message":"37","line":26,"column":11,"nodeType":"38","endLine":30,"endColumn":99},{"ruleId":"32","severity":1,"message":"39","line":5,"column":10,"nodeType":"34","messageId":"35","endLine":5,"endColumn":14},"no-unused-vars","'remeber' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'data' is assigned a value but never used."]